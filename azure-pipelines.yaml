pool:
  vmImage: 'ubuntu-latest'

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.cache/.gradle
  SONAR_USER_HOME: $(Pipeline.Workspace)/.cache/.sonar
  imageName: felipebz/zpa-cli
  tag: nightly

steps:
  - checkout: self
    submodules: true

  - task: Cache@2
    inputs:
      key: 'gradle | "$(Agent.OS)" | **/build.gradle.kts'
      restoreKeys: |
        gradle | "$(Agent.OS)"
        gradle
      path: $(Pipeline.Workspace)/.cache

  - task: Gradle@3
    inputs:
      jdkVersionOption: 1.17
      tasks: "build publish copyJdksToCache"
      options: '--build-cache --refresh-dependencies'
    env:
      OSSRH_USERNAME: $(OSSRH_USERNAME)
      OSSRH_PASSWORD: $(OSSRH_PASSWORD)

  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      jdkVersionOption: '1.17'
      tasks: 'jreleaserAssemble jreleaserFullRelease'
      options: '--build-cache'
    env:
      JRELEASER_GITHUB_TOKEN: $(JRELEASER_GITHUB_TOKEN)

  - script: |
      # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
      ./gradlew --stop

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(system.defaultworkingdirectory)'
      contents: 'build/distributions/*'
      targetFolder: $(Build.ArtifactStagingDirectory)
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: zpa-cli

  - task: Docker@2
    displayName: Build Docker image
    inputs:
      repository: $(imageName)
      command: build
      tags: |
        $(tag)

  - script: |
      ./source-test/run-sonar-scanner.sh
    displayName: 'Analyze demo project on SonarCloud'
    env:
      SONARCLOUD_ORGANIZATION: $(SONARCLOUD_ORGANIZATION)
      SONARCLOUD_TOKEN: $(SONARCLOUD_TOKEN)

  - task: Docker@2
    displayName: Push Docker image
    inputs:
      containerRegistry: DockerHub
      repository: $(imageName)
      command: push
      tags: |
        $(tag)
